package com.videoproject.entity3;
// Generated Apr 20, 2020, 12:09:43 AM by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Videos1 generated by hbm2java
 */
@Entity
@Table(name = "videos1", catalog = "dbtrain", uniqueConstraints = @UniqueConstraint(columnNames = "url"))
public class Videos1 implements java.io.Serializable {

	private Integer videoId;
	private Person1 person1ByUserid;
	private Person1 person1ByComedianid;
	private String url;
	private String title;
	private String description;
	private Integer posteddate;
	private Set<Tags> tagses = new HashSet<Tags>(0);
	private Set<Reviews1> reviews1s = new HashSet<Reviews1>(0);

	public Videos1() {
	}

	public Videos1(Person1 person1ByUserid, Person1 person1ByComedianid, String url, String title, String description,
			Integer posteddate, Set<Tags> tagses, Set<Reviews1> reviews1s) {
		this.person1ByUserid = person1ByUserid;
		this.person1ByComedianid = person1ByComedianid;
		this.url = url;
		this.title = title;
		this.description = description;
		this.posteddate = posteddate;
		this.tagses = tagses;
		this.reviews1s = reviews1s;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "video_id", unique = true, nullable = false)
	public Integer getVideoId() {
		return this.videoId;
	}

	public void setVideoId(Integer videoId) {
		this.videoId = videoId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userid")
	public Person1 getPerson1ByUserid() {
		return this.person1ByUserid;
	}

	public void setPerson1ByUserid(Person1 person1ByUserid) {
		this.person1ByUserid = person1ByUserid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "comedianid")
	public Person1 getPerson1ByComedianid() {
		return this.person1ByComedianid;
	}

	public void setPerson1ByComedianid(Person1 person1ByComedianid) {
		this.person1ByComedianid = person1ByComedianid;
	}

	@Column(name = "url", unique = true, length = 500)
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Column(name = "title", length = 100)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "description", length = 100)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "posteddate")
	public Integer getPosteddate() {
		return this.posteddate;
	}

	public void setPosteddate(Integer posteddate) {
		this.posteddate = posteddate;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "videos1s")
	public Set<Tags> getTagses() {
		return this.tagses;
	}

	public void setTagses(Set<Tags> tagses) {
		this.tagses = tagses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "videos1")
	public Set<Reviews1> getReviews1s() {
		return this.reviews1s;
	}

	public void setReviews1s(Set<Reviews1> reviews1s) {
		this.reviews1s = reviews1s;
	}

}
